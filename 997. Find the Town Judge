class Solution {
public:
    int findJudge(int n, vector<vector<int>>& trust) {
        //We have created a unordered map (hashmap )to store the count of occurance of
        //every trusted person as the judge will be trusted by n-1 people
        unordered_map<int,int>m;
        //we have created a vector vector of int to store that i person trust all the graph[i]
        //persons.
        //The judge will trust none so graph[judge].size() will be 0.
        vector<vector<int>>graph(n+1);
        //we are storing the values in hashmap and graph
        for(int i=0;i<trust.size();i++){
            m[trust[i][1]]++;
            graph[trust[i][0]].push_back(trust[i][1]);
        }
        //we are Traversing all the people values[1,n] and check our both conditions
        for(int i=1;i<=n;i++){
            if(m[i]==n-1&&graph[i].size()==0){
                //if both conditions are satisfied then we will return the person value
                return i;
            }
        }
        //if no judge found return -1
        return -1;
        
    }
};
